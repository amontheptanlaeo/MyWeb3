import Head from 'next/head'
import React, { useState,useEffect } from 'react';
import { useMoralis , useWeb3Transfer , useMoralisWeb3Api  } from "react-moralis";




export default function Home() {

  const Web3Api = useMoralisWeb3Api();

  const [userDetail,setUserDetail] = useState(null);
  const { authenticate, isAuthenticated, isAuthenticating, user, account, logout  , Moralis} = useMoralis();

  // const fetchTokenPrice = async () => {
  //   const options = {
  //     address: "0xf182c2fe6f1db155ffff841660456d6685136b6b",
  //     chain: "bsc",
  //     exchange: "PancakeSwapv2",
  //   };
  //   const price = await Web3Api.token.getTokenPrice(options);
  //   console.log(price);
  // };

  // const fetchTokenMetadataBySymbol = async () => {
  //   //Get metadata for one token
  //   const options = { chain: "bsc", symbols: "POOP" };
  //   const tokenMetadata = await Web3Api.token.getTokenMetadataBySymbol(options);
  //   console.log(tokenMetadata);
  // };


  // const fetchNativeBalance = async () => {
  //   // get mainnet native balance for the current user
  //   const balance = await Web3Api.account.getNativeBalance();
  //   console.log(balance);
  //   // get BSC native balance for a given address
  //   const options = {
  //     chain: "bsc",
  //     address: user.get("ethAddress"),
  //     to_block: "1234",
  //   };
  //   const bscBalance = await Web3Api.account.getNativeBalance(options);
  //   console.log(bscBalance);
  // };

  const fetchTokenBalances = async () => {
    const options = {
      chain: "bsc"
    };
    const balances = await Web3Api.account.getTokenBalances(options);
    console.log(balances);
  };

  const { fetch, error, isFetching } = useWeb3Transfer({
    amount: Moralis.Units.Token('0.5', '18'),
    receiver: "0x8C91C678259f2D5171D63A1988f1bFa086fe511e",
    type: "erc20",
    contractAddress: "0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee",
  });


    useEffect(() => {
    if (isAuthenticated) {
      // add your logic here
      console.log(user)
      setUserDetail(user);
      fetchTokenBalances();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [isAuthenticated]);

    const login = async () => {
      if (!isAuthenticated) {
        await authenticate({signingMessage: "Sign in to PooWeb3" })
          .then(function (user) {
            console.log("logged in user:", user);
            console.log(user?.get("ethAddress"));
            // fetchTokenMetadataBySymbol();
            // fetchTokenPrice();
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    }

    const logOut = async () => {
      await logout();
      console.log("logged out");
    }

  return (
    <div className='flex justify-center items-center flex-col h-screen w-full'>
      <Head>
        <title>Poowee</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className='mb-8'>Welcome to PooWeb3</h1>
      {user?.get("ethAddress") && <p className='mb-8'>{user.get("ethAddress")}</p>}
      <div className='flex justify-center items-center'>
        {
          !isAuthenticated ?  <span className='p-3 text-[15px] bg-blue-800 text-white cursor-pointer mb-8' onClick={login}>Connect Metamask Wallet</span> : <span className=' mb-8 p-3 text-[15px] bg-red-400 text-white cursor-pointer' onClick={logOut} disabled={isAuthenticating}>Logout</span>
        }
      </div>
      <div>
        {error && <h1 className='mb-8 mt-10'>Error</h1>}
        <span className='p-3 text-[15px] bg-blue-800 text-white cursor-pointer' onClick={() => fetch()} disabled={isFetching}>
          Transfer
        </span>
      </div>
    
    </div>

  )
}
